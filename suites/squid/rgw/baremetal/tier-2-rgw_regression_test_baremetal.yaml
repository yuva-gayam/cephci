# RHCS 7.x Tier-2 RGW regression test suite for RGW daemon.

# Runs the Object Gateway tests from the repo
# https://github.com/red-hat-storage/ceph-qe-scripts/tree/master/rgw
# each script under the above repo has a yaml ( config defined ) which is actually a test
# We are calling the script and associated yaml here.
# global-conf: conf/squid/rgw/tier-0_rgw.yaml

tests:
  - test:
      abort-on-fail: true
      desc: Install software pre-requisites for cluster deployment.
      module: install_prereq.py
      name: setup pre-requisites

  - test:
      abort-on-fail: true
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                orphan-initial-daemons: true
                skip-monitoring-stack: true
                initial-dashboard-password: admin@123
                dashboard-password-noupdate: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.all
              args:
                placement:
                  label: rgw
                  nodes:
                    - node3
                    - node4
                    - node5
      desc: RHCS cluster deployment using cephadm.
      destroy-cluster: false
      module: test_cephadm.py
      name: deploy cluster
      polarion-id: CEPH-83573713

  - test:
      name: Monitoring Services deployment
      desc: Add monitoring services using spec file.
      module: test_cephadm.py
      polarion-id: CEPH-83574727
      config:
        steps:
          - config:
              command: apply_spec
              service: orch
              validate-spec-services: true
              specs:
                - service_type: prometheus
                  placement:
                    count: 1
                    nodes:
                      - node1
                - service_type: grafana
                  placement:
                    nodes:
                      - node1
                - service_type: alertmanager
                  placement:
                    count: 1
                - service_type: node-exporter
                  placement:
                    host_pattern: "*"
                - service_type: crash
                  placement:
                    host_pattern: "*"

  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.1
        node: node6
        install_packages:
          - ceph-common
        copy_admin_keyring: true
      desc: Configure the RGW client system
      destroy-cluster: false
      module: test_client.py
      name: configure client
      polarion-id: CEPH-83573758

  # Swift basic operation

  - test:
      name: Modify tenant swift user
      desc: test modify tenant swift user
      polarion-id: CEPH-9750
      module: sanity_rgw.py
      config:
        script-name: user_create.py
        config-file-name: test_modify_tenanted_subuser.yaml

  - test:
      name: Swift bulk delete operation
      desc: Swift bulk delete operation
      polarion-id: CEPH-9753
      module: sanity_rgw.py
      config:
        script-name: test_swift_bulk_delete.py
        config-file-name: test_swift_bulk_delete.yaml

  - test:
      name: swift upload large object tests
      desc: upload large object in swift
      polarion-id: CEPH-9808
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_swift_large_upload.yaml

  - test:
      name: swift download large object tests
      desc: download large object in swift
      polarion-id: CEPH-9809 # CEPH-9816
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_swift_large_download.yaml

  - test:
      name: Get object with different tenant swift user with same name
      desc: test get object with different tenant swift user with same name
      polarion-id: CEPH-9744
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_get_objects_from_tenant_swift_user_baremetal.yaml
        test-config:
          objects_count: 200
          container_count: 2
          objects_size_range:
              min: 2
              max: 5000
          test_ops:
              create_container: true
              fill_container: true
              new_tenant: true
              get_object_with_same_swift_tenant_user_under_diff_tenant: true


  - test:
      name: delete container with different tenant swift user with same name
      desc: test delete container with different tenant swift user with same name
      polarion-id: CEPH-9749
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_delete_container_from_user_of_diff_tenant_baremetal.yaml
        test-config:
          objects_count: 200
          container_count: 2
          objects_size_range:
              min: 2
              max: 5000
          test_ops:
              create_container: true
              fill_container: true
              new_tenant: true
              delete_container_with_same_swift_tenant_user_under_diff_tenant: true


  - test:
      name: upload large object with same name using tenant swift user
      desc: test upload large object with same name using tenant swift user
      polarion-id: CEPH-9814
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_upload_large_obj_with_same_obj_name.yaml

  - test:
      name: Test the swift URL at root
      desc: Test the swift URL at root
      polarion-id: CEPH-83572699
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_swift_at_root_baremetal.yaml
        test-config:
          user_type: non-tenanted
          container_count: 1
          objects_count: 200
          objects_size_range:
              min: 2
              max: 5000
          test_ops:
              swift_at_root: true

  # Versioning Tests

  - test:
      name: Test suspension of versioning
      desc: test_versioning_suspend
      polarion-id: CEPH-14263
      module: sanity_rgw.py
      config:
        script-name: test_versioning_with_objects.py
        config-file-name: test_versioning_suspend_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 0
          version_count: 0
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                enable_version: true
                suspend_version: true
                copy_to_version: false
                delete_object_versions: false
                upload_after_suspend: false


  - test:
      name: Test overwrite by another user of versioned objects
      desc: check to test to overwrite objects suspend from another user
      polarion-id: CEPH-9199
      module: sanity_rgw.py
      config:
        script-name: test_versioning_with_objects.py
        config-file-name: test_versioning_objects_suspend_from_another_user_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          version_count: 4
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                enable_version: true
                suspend_version: false
                suspend_from_extra_user: true
                copy_to_version: false
                delete_object_versions: false
                upload_after_suspend: false

  - test:
      name: Versioning with copy objects and delete with different user
      desc: Versioning with copy objects and delete with different user
      polarion-id: CEPH-9353 # Also applies for CEPH-10215
      module: sanity_rgw.py
      config:
        script-name: test_versioning_copy_objects.py
        config-file-name: test_delete_version_object_using_different_user_baremetal.yaml
        test-config:
          objects_size_range:
            min: 2
            max: 5000
          delete_using_different_user: true

  - test:
      name: Test deleting the current version of the object
      desc: Deleting the current version of the object
      polarion-id: CEPH-10647
      module: sanity_rgw.py
      config:
        script-name: test_versioning_with_objects.py
        config-file-name: test_delete_current_version_object_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          version_count: 4
          objects_size_range:
                min: 2
                max: 5000
          delete_object_current_versions: true
          test_ops:
                enable_version: true
                suspend_version: false
                copy_to_version: false
                delete_object_versions: false
                upload_after_suspend: false

  - test:
      name: Test copy versioned objects to another versioned bucket
      desc: copy versioned objects to another versioned bucket
      polarion-id: CEPH-10644
      module: sanity_rgw.py
      config:
        script-name: test_versioning_copy_objects.py
        config-file-name: test_copy_version_object_to_version_bucket_baremetal.yaml
        test-config:
          objects_size_range:
            min: 2
            max: 5000
          copy_versioned_obj_to_versioned_bkt: true

  - test:
      name: Test Write modify and read objects in the versioned bucket
      desc: Test Write modify and read objects in the versioned bucket
      polarion-id: CEPH-10641
      module: sanity_rgw.py
      config:
        script-name: test_versioning_with_objects.py
        config-file-name: test_access_versioned_objects_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          version_count: 3
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                enable_version: true
                suspend_version: false
                copy_to_version: false
                delete_object_versions: false
                upload_after_suspend: false
                access_versioned_object: true

  # BucketPolicy Tests
  - test:
      name: ListBucketVersions with bucket policy for users in same tenant
      desc: Test ListBucketVersions bucket policy for users in same tenant
      polarion-id: CEPH-11574
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_with_tenant_user.py
        config-file-name: test_listbucketversion_with_bucketpolicy_for_tenant_user_baremetal.yaml
        test-config:
          bucket_count: 2
          objects_count: 200
          version_count: 5
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            users_count: 3
            create_bucket: true
            create_object: true
            enable_version: true
            upload_type: normal
            list_bucket_versions: true

  - test:
      name: Get object and its version from same and different tenant users
      desc: test get object and its version from same and different tenant users
      polarion-id: CEPH-11516
      module: sanity_rgw.py
      config:
        test-version: v2
        script-name: test_bucket_policy_with_tenant_user.py
        config-file-name: get_object_and_its_versions_tenat_user_baremetal.yaml
        test-config:
          objects_count: 200
          bucket_count: 2
          version_count: 2
          objects_size_range:
              min: 2
              max: 5000
          test_ops:
              enable_version: true
              create_bucket: true
              users_count: 3
              new_tenant_user: true
              get_obj_and_its_versions: true


  - test:
      name: test bucket policy with multiple statements
      desc: test bucket policy with multiple statements
      polarion-id: CEPH-11216
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_multiple_statements_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          encryption_keys: kms
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key2
              Status: Enabled
              Expiration:
                Days: 20
          test_ops:
            upload_type: normal
            verify_policy: True
            endpoint: kafka
            ack_type: broker
            bucket_tags: [
              {
                  "Key": "product",
                  "Value": "ceph"
              }
            ]
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": ["s3:PutObject", "s3:ListBucket", "s3:GetObject", "s3:DeleteObject", "s3:AbortMultipartUpload"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::*",
                    "Effect": "Allow",
                    "Sid": "statement1",
                  },
                  {
                    "Action": "s3:DeleteBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::*",
                    "Effect": "Deny",
                    "Sid": "statement2",
                  },
                  {
                    "Action": ["s3:PutBucketVersioning", "s3:GetBucketVersioning", "s3:PutBucketWebsite", "s3:GetBucketWebsite", "s3:PutLifecycleConfiguration", "s3:GetLifecycleConfiguration", "s3:PutBucketEncryption", "s3:GetBucketEncryption", "s3:PutBucketTagging", "s3:GetBucketTagging", "s3:PutBucketPolicy", "s3:GetBucketPolicy", "s3:DeleteBucketPolicy"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::*",
                    "Effect": "Allow",
                    "Sid": "statement3",
                  }
                ],
              }


  - test:
      name: test bucket policy with conflicting statements
      desc: test bucket policy with conflicting statements
      polarion-id: CEPH-11217
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_multiple_conflicting_statements_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            conflicting_statements: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": ["s3:GetObject"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": ["arn:aws:s3:::<bucket_name>", "arn:aws:s3:::<bucket_name>/*"],
                    "Effect": "Allow",
                    "Sid": "statement1",
                  },
                  {
                    "Action": ["s3:GetObject"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": ["arn:aws:s3:::<bucket_name>", "arn:aws:s3:::<bucket_name>/*"],
                    "Effect": "Deny",
                    "Sid": "statement2",
                  }
                ],
              }


  - test:
      name: test bucket policy with condition blocks
      desc: test bucket policy with condition blocks
      polarion-id: CEPH-11589
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_condition_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                    "Condition": {
                      "StringEquals": {
                        "s3:prefix": "key"
                      },
                      "NumericEquals": {
                        "s3:max-keys": 20
                      }
                    }
                  },
                  {
                    "Sid": "statement2",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                    "Condition": {
                      "StringNotEquals": {
                        "s3:prefix": "images"
                      },
                      "NumericNotEquals": {
                        "s3:max-keys": 50
                      }
                    }
                  },
                  {
                    "Sid": "statement3",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Deny",
                    "Condition": {
                      "StringEquals": {
                        "s3:prefix": "docs"
                      }
                    }
                  },
                  {
                    "Sid": "statement4",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Deny",
                    "Condition": {
                      "NumericGreaterThan": {
                        "s3:max-keys": 1002
                      }
                    }
                  },
                  {
                    "Sid": "statement5",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Deny",
                    "Condition": {
                      "NumericLessThan": {
                        "s3:max-keys": 10
                      }
                    }
                  }
                ],
              }


  - test:
      name: test bucket policy condition block with explicit deny
      desc: test bucket policy condition block with explicit deny
      polarion-id: CEPH-11590
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_condition_explicit_deny_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                    "Condition": {
                      "StringEquals": {
                        "s3:prefix": "key"
                      },
                      "NumericEquals": {
                        "s3:max-keys": 10
                      }
                    }
                  },
                  {
                    "Sid": "statement2",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Deny",
                    "Condition": {
                      "StringNotEquals": {
                        "s3:prefix": "key"
                      },
                      "NumericNotEquals": {
                        "s3:max-keys": 10
                      }
                    }
                  },
                ],
              }


  - test:
      name: test bucket policy deny actions
      desc: test bucket policy deny actions
      polarion-id: CEPH-11216
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_deny_actions_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          encryption_keys: kms
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key2
              Status: Enabled
              Expiration:
                Days: 20
          test_ops:
            upload_type: normal
            verify_policy: True
            endpoint: kafka
            ack_type: broker
            bucket_tags: [
              {
                  "Key": "product",
                  "Value": "ceph"
              }
            ]
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": ["s3:PutObject", "s3:ListBucket", "s3:GetObject", "s3:DeleteObject", "s3:AbortMultipartUpload", "s3:PutBucketVersioning", "s3:GetBucketVersioning", "s3:PutBucketWebsite", "s3:GetBucketWebsite", "s3:PutLifecycleConfiguration", "s3:GetLifecycleConfiguration", "s3:PutBucketEncryption", "s3:GetBucketEncryption", "s3:PutBucketTagging", "s3:GetBucketTagging", "s3:DeleteBucket", "s3:CreateBucket", "s3:PutBucketPolicy", "s3:GetBucketPolicy", "s3:DeleteBucketPolicy"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::*",
                    "Effect": "Deny",
                    "Sid": "statement1",
                  }
                ],
              }


  - test:
      name: test bucket policy for object torrent
      desc: Same tenant and cross tenanted user access to object torrent
      polarion-id: CEPH-11209
      module: sanity_rgw.py
      config:
        script-name: test_policy_torrent.py
        config-file-name: test_policy_torrent_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": ["s3:GetObjectTorrent", "s3:GetObject"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::*",
                    "Effect": "Allow",
                    "Sid": "statement1",
                  }
                ]
              }
            policy_document1:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Action": ["s3:GetObjectTorrent", "s3:GetObject"],
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::*",
                    "Effect": "Allow",
                    "Sid": "statement1",
                  }
                ]
              }


  # Bucket Lifecycle Tests
  - test:
      name: object expiration with expiration set to Date
      desc: Test object expiration with expiration set to Date
      polarion-id: CEPH-11185
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_date_baremetal.yaml
        test-config:
          enable_resharding: True
          shards: 211
          sharding_type: manual
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            enable_versioning: true
            create_object: true
            version_count: 3
            delete_marker: false
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key1
              Status: Enabled
              Expiration:
                Date: "2019-02-17"

  - test:
      name: object expiration for delete marker set
      desc: Test object expiration for delete marker set
      polarion-id: CEPH-11189
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_rule_delete_marker_baremetal.yaml
        test-config:
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            enable_versioning: true
            create_object: true
            version_count: 2
            delete_marker: true
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key2
              Status: Enabled
              Expiration:
                Days: 20
          delete_marker_ops:
            - ID: delete_marker_rule
              Filter:
                Prefix: key2
              Status: Enabled
              Expiration:
                ExpiredObjectDeleteMarker: true

  - test:
      name: Read lifecycle configuration on a given bucket
      desc: Read lifecycle configuration on a given bucket
      polarion-id: CEPH-11181
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_config_ops.py
        config-file-name: test_bucket_lifecycle_config_read_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                enable_versioning: false
                version_count: 0
                create_bucket: true
                create_object: true

  - test:
      name: lifecycle with version enabled bucket containing multiple object versions
      desc: Test lifecycle with version enabled bucket containing multiple object versions
      polarion-id: CEPH-11188
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_config_ops.py
        config-file-name: test_bucket_lifecycle_config_versioning_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                enable_versioning: true
                version_count: 5
                delete_versioned_object: true
                create_bucket: true

  - test:
      name: Disable lifecycle configuration on a given bucket
      desc: Disable lifecycle configuration on a given bucket
      polarion-id: CEPH-11191
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_config_ops.py
        config-file-name: test_bucket_lifecycle_config_disable_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                enable_versioning: false
                version_count: 0
                create_bucket: true
                create_object: true
                disable_lifecycle: true

  - test:
      name: Modify lifecycle configuration on a given bucket
      desc: Modify lifecycle configuration on a given bucket
      polarion-id: CEPH-11120
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_config_ops.py
        config-file-name: test_bucket_lifecycle_config_modify_baremetal.yaml
        test-config:
          user_count: 1
        bucket_count: 2
        objects_count: 200
        objects_size_range:
              min: 2
              max: 5000
        test_ops:
              enable_versioning: false
              version_count: 0
              create_bucket: true
              create_object: true
              modify_lifecycle: true

  # Bucket Request Payer tests
  - test:
      name: bucket request payer
      desc: Basic test for bucket request payer
      polarion-id: CEPH-10344 # also applies to CEPH-10346 and CEPH-10351
      module: sanity_rgw.py
      config:
        script-name: test_bucket_request_payer.py
        config-file-name: test_bucket_request_payer_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 10

  # v1 tests
  # ACLs tests
  - test:
      name: Basic ACLs Test
      desc: Test basic acls
      polarion-id: CEPH-14239
      module: sanity_rgw.py
      config:
        test-version: v1
        run-on-rgw: true
        script-name: test_acls.py
        config-file-name: test_acls_baremetal.yaml
        test-config:

  - test:
      name: test acls with copy objects on different users
      desc: Test acls with copy objects on different users
      polarion-id: CEPH-14242
      module: sanity_rgw.py
      config:
        test-version: v1
        run-on-rgw: true
        script-name: test_acls_copy_obj.py
        config-file-name: test_acls_copy_obj_baremetal.yaml
        test-config:

  - test:
      name: acls reset
      desc: Test acls reset
      polarion-id: CEPH-14260 # also applies to CEPH-10489
      module: sanity_rgw.py
      config:
        test-version: v1
        run-on-rgw: true
        script-name: test_acls_reset.py
        config-file-name: test_acls_reset_baremetal.yaml
        test-config:

  - test:
      name: test acls on all users
      desc: Test acls on all users
      polarion-id: CEPH-14240 # also applies to CEPH-14241, CEPH-10487, CEPH-10488
      module: sanity_rgw.py
      config:
        test-version: v1
        run-on-rgw: true
        script-name: test_acls_all_usrs.py
        config-file-name: test_acls_all_usrs_baremetal.yaml
        test-config:

  # multipart test
  - test:
      name: multipart upload cancel reupload
      desc: Test multipart upload->cancel->reupload
      polarion-id: CEPH-14266
      module: sanity_rgw.py
      config:
        test-version: v1
        run-on-rgw: true
        script-name: test_multipart_upload_cancel.py
        config-file-name: test_multipart_upload_cancel.yaml


  # User, Bucket rename, Bucket link and unlink
  - test:
      name: User rename
      polarion-id: CEPH-83574811
      desc: RGW User rename script
      module: sanity_rgw.py
      config:
        script-name: test_user_bucket_rename.py
        config-file-name: test_user_rename_baremetal.yaml
        test-config:
          user_count: 1
          test_ops:
              rename_users: true
              rename_buckets: false
              bucket_link_unlink: false

  - test:
      name: Bucket rename
      desc: RGW Bucket rename script
      polarion-id: CEPH-83572908
      module: sanity_rgw.py
      config:
        test-version: v2
        script-name: test_user_bucket_rename.py
        config-file-name: test_bucket_rename_baremetal.yaml
        test-config:
          user_count: 1
          test_ops:
              rename_users: false
              rename_buckets: true
              bucket_link_unlink: false

  # Multifactor Authentication tests

  - test:
      name: multipart versioned object deletion with mfa token
      desc: test multipart versioned object deletion with mfa token
      polarion-id: CEPH-83574411
      module: sanity_rgw.py
      config:
        test-version: v2
        script-name: test_rgw_mfa.py
        config-file-name: test_rgw_mfa_multipart.yaml

  - test:
      name: incorrect syntax for mfa resync commnad appropriate usage message is displayed
      desc: test with incorrect syntax for mfa resync commnad appropriate usage message is displayed
      polarion-id: CEPH-83574412
      module: sanity_rgw.py
      config:
        test-version: v2
        script-name: test_rgw_mfa.py
        config-file-name: test_rgw_mfa_incorrect_syntax_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          version_count: 1
          objects_size_range:
            min: 2
            max: 5000
          local_file_delete: true
          test_ops:
            mfa_create: true
            mfa_check: true
            mfa_list: true
            mfa_resync_invalid_syntax: true
            create_bucket: false
            enable_mfa_version: false
            create_object: false
            delete_mfa_object: false
            delete_bucket: false
            remove_mfa: true


  - test:
      name: Test s3_copy_obj on user with admin flag through AWS
      desc: TESCO-Segfault with s3CopyObj with admin user
      polarion-id: CEPH-83575562
      module: sanity_rgw.py
      config:
        script-name: ../aws/test_sts_rename_large_object.py
        config-file-name: ../../aws/configs/test_s3copyObj_admin_user_baremetal.yaml
        test-config:
          s3_copy_obj: true
          objects_count: 200
          objects_size_range:
                min: 2
                max: 5000
          sts:
                policy_document:
                    "Version": "2012-10-17"
                    "Statement":
                          [
                              {
                                    "Effect": "Allow",
                                    "Principal":
                                        {
                                              "AWS":
                                                  ["arn:aws:iam:::user/<user_name>"],
                                        },
                                    "Action": ["sts:AssumeRole"],
                              },
                          ]
                role_policy:
                    "Version": "2012-10-17"
                    "Statement":
                          [
                              {
                                    "Effect": "Allow",
                                    "Action":
                                        [
                                            "s3:ListBucket",
                                            "s3:ListBucketMultipartUploads",
                                            "s3:Get*",
                                        ],
                                    "Resource": "arn:aws:s3:::<bucket_name>",
                              },
                              {
                                    "Effect": "Allow",
                                    "Action":
                                        [
                                            "s3:Get*",
                                            "s3:PutObject",
                                            "s3:DeleteObject",
                                            "s3:AbortMultipartUpload",
                                            "s3:ListMultipartUploadParts",
                                            "s3:GetObjectACL",
                                            "s3:PutObjectACL",
                                        ],
                                    "Resource":
                                        [
                                            "arn:aws:s3:::<bucket_name>",
                                            "arn:aws:s3:::<bucket_name>*",
                                        ],
                              },
                              {
                                    "Effect": "Deny",
                                    "Action": "s3:*",
                                    "NotResource":
                                        [
                                            "arn:aws:s3:::<bucket_name>",
                                            "arn:aws:s3:::<bucket_name>*",
                                        ],
                              },
                          ]


  # testing rgw through curl
  - test:
      name: Test rgw put object through curl using transfer_encoding chunked
      desc: Test rgw put object through curl using transfer_encoding chunked
      polarion-id: CEPH-83575572
      module: sanity_rgw.py
      config:
        script-name: ../curl/test_rgw_using_curl.py
        config-file-name: ../../curl/configs/test_curl_transfer_encoding_chunked_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          local_file_delete: true
          test_ops:
            create_bucket: true
            create_object: true
            Transfer_Encoding: chunked
            download_object: true
            user_remove: true
            delete_bucket_object: true

  - test:
      name: Test rgw bucket quota using CURL
      desc: Test rgw bucket quota using CURL
      polarion-id: CEPH-83575572
      module: sanity_rgw.py
      config:
        script-name: ../curl/test_quota_using_curl.py
        config-file-name: ../../curl/configs/test_quota_mgmt_bucket_quota_using_curl_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            user_remove: true
            set_bucket_quota: true
            test_quota_max_objects: true
            test_quota_max_size: true
            each_obj_size: 10240
            bucket_quota:
              "enabled": true
              "check_on_raw": true
              "max_size_kb": 200
              "max_size": 204800
              "max_objects": 20
  - test:
      name: Test rgw user quota using CURL
      desc: Test rgw user quota using CURL
      polarion-id: CEPH-83575572
      module: sanity_rgw.py
      comments: Known issue BZ-2361821 for 8.1
      config:
        script-name: ../curl/test_quota_using_curl.py
        config-file-name: ../../curl/configs/test_quota_mgmt_user_quota_using_curl_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            user_remove: true
            set_bucket_quota: true
            test_quota_max_objects: true
            test_quota_max_size: true
            each_obj_size: 10240
            bucket_quota:
              "enabled": true
              "check_on_raw": true
              "max_size_kb": 200
              "max_size": 204800
              "max_objects": 20

  - test:
      name: Test rgw bucket quota conflict using CURL
      desc: Test rgw bucket quota conflict using CURL
      polarion-id: CEPH-83575572
      module: sanity_rgw.py
      comments: Known issue BZ-2361821 for 8.1
      config:
        script-name: ../curl/test_quota_using_curl.py
        config-file-name: ../../curl/configs/test_quota_mgmt_conflict_bucket_quota_using_curl_baremetal.yaml
        test-config:
         user_count: 1
        bucket_count: 1
        objects_count: 200
        objects_size_range:
          min: 2
          max: 5000
        test_ops:
          create_bucket: true
          create_object: true
          user_remove: true
          set_bucket_quota: true
          set_individual_bucket_quota: true
          test_quota_max_objects: true
          test_quota_max_size: true
          each_obj_size: 10240
          verify_quota_head_bucket: true
          bucket_quota:
            "enabled": true
            "check_on_raw": true
            "max_size_kb": 400
            "max_size": 409600
            "max_objects": 40
          individual_bucket_quota:
            "enabled": true
            "check_on_raw": true
            "max_size_kb": 200
            "max_size": 204800
            "max_objects": 20
          head_bucket:
            X-RGW-Quota-User-Size: -1
            X-RGW-Quota-User-Objects: -1
            X-RGW-Quota-Max-Buckets: 1000
            X-RGW-Quota-Bucket-Size: 204800
            X-RGW-Quota-Bucket-Objects: 20

  - test:
      name: Test rgw user capability user-info-without-keys using curl
      desc: Test rgw user capability user-info-without-keys using curl
      polarion-id: CEPH-83582351
      module: sanity_rgw.py
      config:
        script-name: ../curl/test_rgw_using_curl.py
        config-file-name: ../../curl/configs/test_rgw_user_cap_user_info_without_keys_baremetal.yaml
        test-config:
          user_count: 2
          bucket_count: 2
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          local_file_delete: true
          test_ops:
            create_bucket: true
            create_object: true
            download_object: true
            user_remove: true
            test_rgw_user_cap_user_info_without_keys: true


  - test:
      name: Test bucket listing is not truncated
      desc: Test bucket listing is not truncated
      polarion-id: CEPH-83575816
      module: sanity_rgw.py
      config:
        script-name: test_bucket_listing.py
        config-file-name: test_bucket_list_not_truncated_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1200
          objects_count: 200
          objects_size_range:
                min: 2
                max: 5000
          test_ops:
                create_bucket: true
                modify_user: true
                list_bucket_with_uid: true
                user_remove: true

  - test:
      name: Test user modify with placement id
      desc: Test user modify with placement id
      polarion-id: CEPH-83575880
      module: sanity_rgw.py
      config:
        script-name: user_create.py
        config-file-name: test_user_modify_with_placementid_baremetal.yaml
        test-config:
          user_count: 1
          user_type: non-tenanted
          test_ops:
              create_bucket: false
              swift_user: false
              user_modify_with_placementid: true

  # Checksum and CORS tests
  - test:
      name: Test Checksum on all supported algorithms
      desc: Test Checksum on all supported algorithms
      polarion-id: CEPH-83591679
      module: sanity_rgw.py
      config:
        run-on-rgw: true
        script-name: ../aws/test_checksum.py
        config-file-name: ../../aws/configs/test_checksum_api_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          local_file_delete: true
          user_remove: true
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            verify_checksum_api: true

  - test:
      name: Test Checksum which is wrongly computed
      desc: Test Checksum which is wrongly computed
      polarion-id: CEPH-83591699
      module: sanity_rgw.py
      config:
        run-on-rgw: true
        script-name: ../aws/test_checksum.py
        config-file-name: ../../aws/configs/test_wrong_checksum_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          user_remove: true
          objects_size_range:
            min: 2
            max: 5000

  - test:
      name: Test CORS Feature
      desc: Test CORS feature
      polarion-id: CEPH-10355
      module: sanity_rgw.py
      config:
        run-on-rgw: true
        script-name: ../curl/test_cors_using_curl.py
        config-file-name: ../../curl/configs/test_cors_using_curl_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          local_file_delete: true
          test_ops:
            create_bucket: true
            create_object: true
            user_remove: true
            cors_origin: "http://www.cors-example.com"
            policy_document:
              "CORSRules":
                [
                  {
                    "AllowedOrigins": ["http://www.cors-example.com"],
                    "AllowedHeaders": ["*"],
                    "AllowedMethods": ["PUT", "GET", "DELETE"],
                    "MaxAgeSeconds": 3000,
                  },
                ]

  - test:
      name: Test CRLF Injection
      desc: Test CRLF Injection
      polarion-id: CEPH-83574745
      module: sanity_rgw.py
      config:
        run-on-rgw: true
        script-name: ../curl/test_cors_using_curl.py
        config-file-name: ../../curl/configs/test_crlf_injection_curl_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            CRLF_injection: true
            create_object: true
            cors_origin: "http://www.cors-example.com"
            policy_document:
              "CORSRules":
                [
                  {
                    "AllowedOrigins": ["http://www.cors-example.com"],
                    "AllowedHeaders": ["Authorization"],
                    "AllowedMethods": ["PUT", "GET"],
                    "ExposeHeaders": ["XXX\rArbitrary: Header\rAccess-Control-Allow-Credentials: true\rSet-Cookie: CRLF=Injection; \npath=/;"],
                    "MaxAgeSeconds": 3000,
                  },
                ]


  - test:
      name: LC process with versioning suspended bucket
      desc: LC process with versioning suspended bucket
      polarion-id: CEPH-83574809
      module: sanity_rgw.py
      config:
        test-version: v2
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_process_with_versioning_suspended_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 200
          parallel_lc: false
          rgw_lc_debug_interval: 600
          rgw_enable_lc_threads: false
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            enable_versioning: false
            lc_process_with_ver_suspended: true
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key1
              Status: Enabled
              Expiration:
                Date: "2022-01-01"

  # Keystone Integration
  - test:
      name: Verify unified namespace for S3 and swift
      desc: Verify unified namespace for S3 and swift
      polarion-id: CEPH-83572907
      module: sanity_rgw.py
      config:
        script-name: ../aws/test_unified_namespace.py
        config-file-name: ../../aws/configs/test_unified_namespace_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 1

  - test:
      name: test keystone integration with RGW
      desc: test keystone integration with RGW
      polarion-id: CEPH-10169
      module: sanity_rgw.py
      config:
        script-name: ../aws/test_keystone_auth.py
        config-file-name: ../../aws/configs/test_keystone_integration_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 1
          objects_count: 1

# Keystone Integration ACL Test
  - test:
      name: test keystone acl with RGW
      desc: test keystone acl with RGW
      polarion-id: CEPH-83572657
      module: sanity_rgw.py
      config:
        script-name: ../s3_swift/test_swift_acl_with_keystone.py
        config-file-name: ../../s3_swift/configs/test_swift_acl_with_keystone.yaml

  - test:
      name: test_bi_purge for a bucket
      desc: test bi_purge should not error
      module: sanity_rgw.py
      polarion-id: CEPH-83575234
      config:
        script-name: test_Mbuckets_with_Nobjects.py
        config-file-name: test_bi_purge_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            download_object: false
            delete_bucket_object: false
            sharding:
              enable: false
              max_shards: 0
            compression:
              enable: false
              type: zlib
          test_bi_purge: true

  - test:
      name: Indexless buckets
      desc: Indexless (blind) buckets
      polarion-id: CEPH-10354 # also applies to CEPH-10357
      module: sanity_rgw.py
      config:
        test-version: v2
        script-name: test_indexless_buckets.py
        config-file-name: test_indexless_buckets_s3_baremetal.yaml
        test-config:
          user_count: 1
          bucket_count: 2
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            delete_bucket_object: true
            delete_bucket: true

  # Swift Static Large Object
  - test:
      name: test_swift_static_large_object_expiration
      desc: test_swift_static_large_object_expiration
      polarion-id: CEPH-9726
      module: sanity_rgw.py
      config:
        script-name: ../s3_swift/test_swift_static_large_object_expiration.py
        config-file-name: ../../s3_swift/configs/test_swift_slo_expiry.yaml

