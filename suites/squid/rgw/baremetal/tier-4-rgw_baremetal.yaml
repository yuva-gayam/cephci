# This suite executes Tier 4 RGW tests
# global-conf: conf/squid/rgw/tier-0_rgw.yaml

tests:
  - test:
      abort-on-fail: true
      desc: Install software pre-requisites for cluster deployment.
      module: install_prereq.py
      name: setup pre-requisites
  - test:
      abort-on-fail: true
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                orphan-initial-daemons: true
                skip-monitoring-stack: true
                initial-dashboard-password: admin@123
                dashboard-password-noupdate: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
                  nodes:
                    - node3
                    - node4
                    - node5
      desc: RHCS cluster deployment using cephadm.
      destroy-cluster: false
      module: test_cephadm.py
      name: deploy cluster
      polarion-id: CEPH-83573777

  - test:
      name: Monitoring Services deployment
      desc: Add monitoring services using spec file.
      module: test_cephadm.py
      polarion-id: CEPH-83574727
      config:
        steps:
          - config:
              command: apply_spec
              service: orch
              validate-spec-services: true
              specs:
                - service_type: prometheus
                  placement:
                    count: 1
                    nodes:
                      - node1
                - service_type: grafana
                  placement:
                    nodes:
                      - node1
                - service_type: alertmanager
                  placement:
                    count: 1
                - service_type: node-exporter
                  placement:
                    host_pattern: "*"
                - service_type: crash
                  placement:
                    host_pattern: "*"

  # configuring HAproxy on the client node 'node4' and port '5000'
  - test:
      abort-on-fail: true
      clusters:
        ceph:
          config:
            haproxy_clients:
              - node6
            rgw_endpoints:
              - node3:80
              - node4:80
              - node5:80
      desc: "Configure HAproxy"
      module: haproxy.py
      name: "Configure HAproxy"

  # Bucket policy tests

  - test:
      name: test bucket policy with invalid action
      desc: test bucket policy with invalid action
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_action_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:this_is_invalid_action",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                  }
                ],
              }

  - test:
      name: test bucket policy with invalid conditional in condition blocks
      desc: test bucket policy with invalid conditional in condition blocks
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_condition_key_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                    "Condition": {
                      "invalid_conditional": {
                        "s3:prefix": "key"
                      }
                    }
                  }
                ],
              }

  - test:
      name: test bucket policy with invalid effect
      desc: test bucket policy with invalid effect
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_effect_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "this_is_invalid_effect",
                  }
                ],
              }


  - test:
      name: test bucket policy with invalid key
      desc: test bucket policy with invalid key
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_key_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                    "invalid_key": "val1"
                  }
                ],
              }


  - test:
      name: test bucket policy with invalid principal
      desc: test bucket policy with invalid principal
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_principal_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": "this_is_invalid_principal",
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                  }
                ],
              }

  - test:
      name: test bucket policy with invalid resource
      desc: test bucket policy with invalid resource
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_resource_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "this_is_invalid_resource",
                    "Effect": "Allow",
                  }
                ],
              }

  - test:
      name: test bucket policy with invalid version
      desc: test bucket policy with invalid version
      polarion-id: CEPH-83572755
      module: sanity_rgw.py
      config:
        script-name: test_bucket_policy_ops.py
        config-file-name: test_bucket_policy_invalid_version_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            upload_type: normal
            verify_policy: True
            invalid_policy: True
            policy_document:
              {
                "Version": "this_is_invalid_version",
                "Statement": [
                  {
                    "Sid": "statement1",
                    "Action": "s3:ListBucket",
                    "Principal": {"AWS": "arn:aws:iam::<tenant_name>:user/<user_name>"},
                    "Resource": "arn:aws:s3:::<bucket_name>",
                    "Effect": "Allow",
                  }
                ],
              }


  # Bucket lifecycle tests

  - test:
      name: test bucket lc rule conflict between expiration and transition
      desc: test bucket lc rule conflict between expiration and transition
      polarion-id: CEPH-11184
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_rule_conflict_btw_exp_transition_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          user_count: 1
          bucket_count: 1
          objects_count: 200
          parallel_lc: False
          test_lc_transition: True
          pool_name: data.cold
          storage_class: cold
          ec_pool_transition: False
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            enable_versioning: false
            version_count: 1
            conflict_btw_exp_transition: True
          lifecycle_conf:
            - ID: rule1
              Filter:
                  Prefix: key1
              Status: Enabled
              Transitions:
                - Days: 20
                  StorageClass: cold
            - ID: rule2
              Filter:
                  Prefix: key1
              Status: Enabled
              Expiration:
                Days: 20


  - test:
      name: test bucket lc rule conflict between expiration days
      desc: test bucket lc rule conflict between expiration days
      polarion-id: CEPH-11184
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_rule_conflict_exp_days_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            enable_versioning: false
            create_object: true
            version_count: 1
            conflict_exp_days: true
          lifecycle_conf:
            - ID: rule1
              Filter:
                  Prefix: key1
              Status: Enabled
              Expiration:
                Days: 40
            - ID: rule2
              Filter:
                  Prefix: key1
              Status: Enabled
              Expiration:
                Days: 20

  - test:
      name: test bucket lc rule conflict between transition actions
      desc: test bucket lc rule conflict between transition actions
      polarion-id: CEPH-11184
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_rule_conflict_transition_actions_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          user_count: 1
          bucket_count: 1
          objects_count: 200
          parallel_lc: False
          test_lc_transition: True
          pool_name: data.cold
          storage_class: cold
          ec_pool_transition: False
          multiple_transitions: True
          two_pool_transition: True
          second_pool_name: data.glacier
          second_storage_class: glacier
          conflict_transition_actions: True
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            enable_versioning: true
            version_count: 3
            delete_marker: false
            actual_lc_days: 4
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key1
              Status: Enabled
              Transitions:
                - Days: 4
                  StorageClass: cold
              NoncurrentVersionTransitions:
                - NoncurrentDays: 4
                  StorageClass: cold
            - ID: LC_Rule_2
              Filter:
                Prefix: key1
              Status: Enabled
              Transitions:
                - Days: 4
                  StorageClass: glacier
              NoncurrentVersionTransitions:
                - NoncurrentDays: 4
                  StorageClass: glacier


  - test:
      name: test bucket lc rules with same ruleid but different rules
      desc: test bucket lc rules with same ruleid but different rules
      polarion-id: CEPH-11183
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_rule_same_rule_id_diff_rules_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          bucket_count: 2
          objects_count: 200
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            enable_versioning: false
            create_object: true
            version_count: 1
            lc_same_rule_id_diff_rules: true
          lifecycle_conf:
            - ID: rule1
              Filter:
                  Prefix: key1
              Status: Enabled
              Expiration:
                Days: 20
            - ID: rule1
              Filter:
                  Prefix: key2
              Status: Enabled
              Expiration:
                Days: 40

  - test:
      name: Test bucket lc reverse transition
      desc: Test bucket lc reverse transition
      polarion-id: CEPH-83573373
      module: sanity_rgw.py
      config:
        script-name: test_bucket_lifecycle_object_expiration_transition.py
        config-file-name: test_lc_rule_reverse_transition_baremetal.yaml
        run-on-haproxy: true
        test-config:
          haproxy: true
          user_count: 1
          bucket_count: 1
          objects_count: 200
          parallel_lc: False
          test_lc_transition: True
          pool_name: data.cold
          storage_class: cold
          ec_pool_transition: False
          multiple_transitions: True
          two_pool_transition: True
          second_pool_name: data.glacier
          second_storage_class: glacier
          objects_size_range:
            min: 2
            max: 5000
          test_ops:
            create_bucket: true
            create_object: true
            enable_versioning: true
            version_count: 3
            delete_marker: false
            actual_lc_days: 4
            rule2_lc_days: 6
            rule3_lc_days: 6
            reverse_transition: True
          lifecycle_conf:
            - ID: LC_Rule_1
              Filter:
                Prefix: key1
              Status: Enabled
              Transitions:
                - Days: 4
                  StorageClass: cold
              NoncurrentVersionTransitions:
                - NoncurrentDays: 4
                  StorageClass: cold
            - ID: LC_Rule_2
              Filter:
                Prefix: key1
              Status: Enabled
              Transitions:
                - Days: 10
                  StorageClass: glacier
              NoncurrentVersionTransitions:
                - NoncurrentDays: 10
                  StorageClass: glacier
            - ID: LC_Rule_3
              Filter:
                Prefix: key1
              Status: Enabled
              Transitions:
                - Days: 16
                  StorageClass: cold
              NoncurrentVersionTransitions:
                - NoncurrentDays: 16
                  StorageClass: cold

  # swift container operation
  - test:
      name: swift enabling versioning on a bucket that is S3 versioned
      desc: test swift enabling versioning on a bucket that is S3 versioned
      polarion-id: CEPH-10649
      module: sanity_rgw.py
      config:
        script-name: test_swift_basic_ops.py
        config-file-name: test_s3_and_swift_versioning_baremetal.yaml
        test-config:
          user_type: non-tenanted
          container_count: 3
          objects_count: 200
          version_count: 4
          objects_size_range:
              min: 2
              max: 5000
          test_ops:
              enable_version_by_s3: True

  # test s3-select with query generation of incorrect syntax

  - test:
      abort-on-fail: true
      config:
        role: client
        sudo: True
        commands:
          - "echo '\n\n# increase limit on number of open files\n*               soft    nofile          16384\n*               hard    nofile          16384' >> /etc/security/limits.conf"
          - "echo 'ulimit -n 16384' >> /etc/profile"
      desc: increase ulimit number of open files to 16384
      module: exec.py
      name: increase ulimit number of open files to 16384

  - test:
      name: test s3select with depth1 queries on csv objects
      desc: test s3select with depth1 queries of incorrect syntax for checking rgw crashes on csv objects
      polarion-id: CEPH-83575176
      module: sanity_rgw.py
      config:
        script-name: test_s3select.py
        config-file-name: test_s3select_query_gen_csv_depth1.yaml
        run-on-haproxy: true

  - test:
      name: test s3select with depth2 queries on csv objects
      desc: test s3select with depth2 queries of incorrect syntax for checking rgw crashes on csv objects
      polarion-id: CEPH-83575176
      module: sanity_rgw.py
      config:
        script-name: test_s3select.py
        config-file-name: test_s3select_query_gen_csv_depth2.yaml
        run-on-haproxy: true

  - test:
      name: test s3select with depth1 queries on parquet objects
      desc: test s3select with depth1 queries of incorrect syntax for checking rgw crashes on parquet objects
      polarion-id: CEPH-83575176
      module: sanity_rgw.py
      config:
        script-name: test_s3select.py
        config-file-name: test_s3select_query_gen_parquet_depth1.yaml
        run-on-haproxy: true

  - test:
      name: test s3select with depth2 queries on parquet objects
      desc: test s3select with depth2 queries of incorrect syntax for checking rgw crashes on parquet objects
      polarion-id: CEPH-83575176
      module: sanity_rgw.py
      config:
        script-name: test_s3select.py
        config-file-name: test_s3select_query_gen_parquet_depth2.yaml
        run-on-haproxy: true

  # test MOD hotfix bz: complete and abort multipart upload race causes obj download failure after gc kicks in

  - test:
      name: test MOD hotfix bz - 404 again
      desc: complete and abort multipart upload race causes obj download failure after gc kicks in
      polarion-id: CEPH-83604471
      module: sanity_rgw.py
      config:
        script-name: test_Mbuckets_with_Nobjects.py
        config-file-name: test_Mbuckets_with_Nobjects_multipart_upload_complete_abort_race.yaml

