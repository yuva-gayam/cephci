tests:
  - test:
      name: setup pre-requisites
      desc: Install software pre-requisites for cluster deployment
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: Deploy cluster using cephadm
      desc: Bootstrap and deploy services
      module: test_cephadm.py
      polarion-id: CEPH-83573713
      config:
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                mon-ip: node1
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              args:
                - "ceph fs volume create cephfs"
              command: shell
          - config:
              args:
                placement:
                  label: mds
              base_cmd_args:
                verbose: true
              command: apply
              pos_args:
                - cephfs
              service: mds
          - config:
              args:
                - "ceph osd pool create rbd"
              command: shell
          - config:
              args:
                - "rbd pool init rbd"
              command: shell
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: configure client
      desc: Configure client system
      module: test_client.py
      config:
        command: add
        id: client.1
        node: node4
        install_packages:
          - ceph-common
          - samba-client
          - cifs-utils
        copy_admin_keyring: true
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Test create SMB cluster with mTLS enabled to set up the remote control server.
      desc: Test create SMB cluster with mTLS enabled to set up the remote control server.
      module: smb_grpc_setup.py
      polarion-id: CEPH-83627778
      config:
        file_type: yaml
        file_mount: /tmp
        spec:
          - resource_type: ceph.smb.cluster
            cluster_id: smb1
            auth_mode: user
            user_group_settings:
              - { source_type: resource, ref: ug1 }
            placement:
              label: smb
            remote_control:
              cert: { ref: cert1 }
              key: { ref: key1 }
              ca_cert: { ref: cacert1 }
          - resource_type: ceph.smb.usersgroups
            users_groups_id: ug1
            values:
              users:
                - { name: user1, password: passwd }
              groups: [ ]
          - resource_type: ceph.smb.share
            cluster_id: smb1
            share_id: share1
            cephfs:
              volume: cephfs
              subvolumegroup: smb
              subvolume: sv1
              path: /
          - resource_type: ceph.smb.share
            cluster_id: smb1
            share_id: share2
            cephfs:
              volume: cephfs
              subvolumegroup: smb
              subvolume: sv2
              path: /

  - test:
      name: Test grpcurl command to describe all the gRPC Service calls.
      desc: Test grpcurl command to describe all the gRPC Service calls.
      module: smb_grpc_operations.py
      polarion-id: CEPH-83627779
      config:
        smb_cluster_id: smb1
        grpc_operation: describe_all_service_calls

  - test:
      name: Test grpcurl command to show samba and container Info.
      desc: Test grpcurl command to show samba and container Info.
      module: smb_grpc_operations.py
      polarion-id: CCEPH-83627781
      config:
        smb_cluster_id: smb1
        grpc_operation: service_info

  - test:
      name: Test grpcurl command to list connected clients Status, when no client is connected.
      desc: Test grpcurl command to list connected clients Status, when no client is connected.
      module: smb_grpc_operations.py
      polarion-id: CEPH-83631059
      config:
        smb_cluster_id: smb1
        grpc_operation: status_when_no_clients

  - test:
      name: Test grpcurl command to list connected clients Status, when client is connected.
      desc: Test grpcurl command to list connected clients Status, when linux client is connected.
      module: smb_grpc_operations.py
      olarion-id: CCEPH-83631060
      config:
        smb_cluster_id: smb1
        cifs_mount_point: /mnt/smb
        grpc_operation: status_with_linux_client

  - test:
      name: Test grpcurl command to kill specific client connection.
      desc: Test grpcurl command to kill specific linux client connection.
      module: smb_grpc_operations.py
      polarion-id: CEPH-83627783
      config:
        smb_cluster_id: smb1
        grpc_operation: kill_linux_client
        smb_cluster_cleanup: true
